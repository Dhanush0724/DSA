# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def pairSum(self, head):
        """
        :type head: Optional[ListNode]
        :rtype: int
        """
        slow = head
        fast = head
        

        while fast and fast.next:
            slow = slow.next
            fast = fast.next.next

        prev = None
        
        while slow:
            next_node = slow.next
            slow.next = prev
            prev = slow
            slow = next_node
        
        maxi = 0
        first = head
        second = prev

        while second :

            twin = first.val + second.val
            maxi = max(maxi,twin)
            first = first.next
            second = second.next
        
        return maxi

        

        
